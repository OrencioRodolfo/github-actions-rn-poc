name: Build Android and iOS apps

on: push

jobs:
  install-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Retrieve/update cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('./yarn.lock') }}

      - name: Install npm dependencies
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - run: yarn install
      - run: yarn test

  build-android:
    needs: install-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Retrieve/update cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('./yarn.lock') }}

      - name: Install npm dependencies
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - run: yarn install

      - name: Build Android Release
        run: |
          cd android && ./gradlew assembleRelease -PMYAPP_UPLOAD_STORE_PASSWORD='${{ secrets.KEYSTORE_PASSWORD }}' -PMYAPP_UPLOAD_KEY_PASSWORD='${{ secrets.KEYSTORE_PASSWORD }}'
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/

  # build-ios:
  #   needs: install-and-test
  #   runs-on: [self-hosted, macos]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install npm dependencies
  #       run: |
  #         yarn install
  #     - name: Install pod dependencies
  #       run: |
  #         cd ios && pod install
  #     - name: Build app
  #       run: |
  #         xcodebuild -workspace myapp.xcworkspace -scheme myapp archive -archivePath myapp.xcarchive -allowProvisioningUpdates
  #         xcodebuild -exportArchive -archivePath ./myapp.xcarchive -exportPath . -exportOptionsPlist myapp/Info.plist
  #         mv myapp.ipa ../myapp.ipa
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: myapp.ipa
  #         path: ios/build/
